@model IEnumerable<SistemaGestionReservas.Models.Reserva>

<div class="container mt-4">
    <h2>Gestión de Reservas</h2>

    <!-- Botón para crear una nueva reserva -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <a href="@Url.Action("Crear", "Reservas")" class="btn btn-primary">Crear Nueva Reserva</a>
    </div>

    <!-- Formulario de filtros -->
    <form id="form-filtros" class="row mb-4">
        <div class="col-md-4">
            <label for="fechaInicio" class="form-label">Fecha Inicio</label>
            <input type="date" name="fechaInicio" id="fechaInicio" class="form-control" />
        </div>
        <div class="col-md-4">
            <label for="fechaFin" class="form-label">Fecha Fin</label>
            <input type="date" name="fechaFin" id="fechaFin" class="form-control" />
        </div>
        <div class="col-md-4">
            <label for="salaId" class="form-label">Sala</label>
            <select name="salaId" id="salaId" class="form-select">
                <option value="">Todas</option>
                @if (ViewBag.Salas != null)
                {
                    foreach (var sala in ViewBag.Salas)
                    {
                        <option value="@sala.ID">@sala.Nombre</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-12 mt-3">
            <button type="submit" class="btn btn-primary">Filtrar</button>
            <button type="button" id="btn-reset" class="btn btn-secondary">Restablecer</button>
        </div>
    </form>

    <!-- Contenedor dinámico de resultados -->
    <div id="contenedor-resultados">
        @* lista completa *@
        @Html.Partial("_ListaReservas", Model)
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const formFiltros = document.getElementById("form-filtros");
        const contenedorResultados = document.getElementById("contenedor-resultados");
        const btnReset = document.getElementById("btn-reset");

        // Manejar el evento submit para el filtrado dinámico
        formFiltros.addEventListener("submit", async function (event) {
            event.preventDefault();

            const formData = new FormData(formFiltros);
            const queryString = new URLSearchParams(formData).toString();

            try {
                const response = await fetch(`@Url.Action("FiltrarJson", "Reservas")?${queryString}`, {
                    method: "GET",
                    headers: { "Accept": "application/json" },
                });

                if (response.ok) {
                    const data = await response.text();
                    contenedorResultados.innerHTML = data;
                } else {
                    Swal.fire("Error", "Hubo un problema al filtrar las reservas.", "error");
                }
            } catch (error) {
                Swal.fire("Error", "No se pudo procesar la solicitud.", "error");
            }
        });

        // Manejar el evento click para restablecer filtros
        btnReset.addEventListener("click", async function () {
            formFiltros.reset();
            await formFiltros.dispatchEvent(new Event("submit"));
        });
    });
</script>
